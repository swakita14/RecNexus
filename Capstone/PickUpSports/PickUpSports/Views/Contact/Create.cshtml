@model PickUpSports.Models.ViewModel.CreateContactViewModel

@{
    ViewBag.Title = "Create";
}
<br/>




<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container">
            <div class="row">
                <div class="well well-sm">

                    <fieldset>
                        <legend class="text-center header">Initialize Your Information</legend>
                        <div class="form-group">
                            <label class="control-label col-sm-3" for="email">Select Username:</label>
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-user"></span>
                                </div>
                                @Html.EditorFor(model => model.Username, "Username", new { htmlAttributes = new { @class = "form-control", @placeholder = "Username" } })
                            </div>  
                            <label id="Status">@ViewBag.Message</label>
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3" for="email">Firstname:</label>
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-user"></span>
                                </div>
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter First Name" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })                 
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3" for="email">Lastname:</label>
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-user"></span>
                                </div>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Last Name" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3" for="email">Address 1:</label>
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-home"></span>
                                </div>
                                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Address 1" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3" for="email">Address 2:</label>
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-home"></span>
                                </div>
                                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Address 2" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3" for="email">City:</label>
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-map-marker"></span>
                                </div>
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter City" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3" for="email">State:</label>
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-map-marker"></span>
                                </div>
                                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter State" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3" for="email">Zip Code:</label>
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-map-marker"></span>
                                </div>
                                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Zip Code" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3" for="email">Phone Number:</label>
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-earphone"></span>
                                </div>
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Phone Number" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <div class="col-md-12 text-center">
                                <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                        </div>
                    </fieldset>
                    @Html.HiddenFor(x => x.ContactId);

                </div>
            </div>
        </div>

    }
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

